#!/bin/bash
#
# manage systemd integration for VRFs

# Needs to be the same as vrf uses
CFGDIR=/var/lib/vrf

################################################################################
# the duplication in CFGDIR and config file suggests this should
# be done by vrf, or vrf should kick out to this script.

function start_services
{
	local cfg=${CFGDIR}/${VRF}.conf

	vrf exists ${VRF}
	if [ $? -ne 0 ]; then
		return 0
	fi

	# No config -- nothing to do
	if [ ! -e ${cfg} ]; then
		return 0
	fi

	# systemd starts the Post command almost identically
	# with the command; give the systemd --user instance
	# time to initialize
	for n in $(seq 1 5)
	do
		systemctl --user -l status >/dev/null 2>&1
		[ $? -eq 0 ] && break
		if [ $n -eq 5 ]; then
			logger -p daemon.err "systemd-vrf: VRF instance of systemd failed to initialize in expected time; can not start services in VRF ${VRF}"
			return 0
		fi
		sleep 1
	done

	cat ${cfg} | while read s
	do
		systemctl --user --no-block start ${s}
	done

	return 0
}

function do_stop
{
	systemctl --user exit 2>/dev/null
}

################################################################################
# main

VRF=$1

XDG_RUNTIME_DIR=/run/systemd-${VRF}
export XDG_RUNTIME_DIR

# This script either starts the systemd process or the individual
# processes by systemd
if [ -n "$2" ]; then
	case "$2" in
		start-services) start_services;;
		stop) do_stop;;
	esac

	# only exit non-0 if systemd is expected to restart this service
	exit 0
fi

vrf exists ${VRF}
if [ $? -ne 0 ]; then
	logger -p daemon.info "systemd-vrf: VRF ${VRF} does not exist. Can not start systemd"
	exit 0
fi

vrf task set ${VRF} $$
if [ $? -ne 0 ]; then
	logger -p daemon.info "systemd-vrf: Failed to set VRF context to ${VRF}. Can not start systemd for VRF"
	# systemd is not going to fix the VRF situation so no sense in exiting non-0;
	# it only causes another attempt to start this service
	exit 0
fi

exec /bin/systemd --user
